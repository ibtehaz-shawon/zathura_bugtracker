# Generated by Django 2.2.4 on 2019-09-13 15:44

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.utils.timezone import utc
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.UUIDField(default=uuid.UUID('ca3b1972-46cc-4c1f-9e58-39ebe22e2491'), primary_key=True, serialize=False, unique=True)),
                ('user_name', models.CharField(max_length=20)),
                ('username', models.CharField(default='fd9dd766-4de', max_length=12, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('updated_at', models.DateTimeField(default=datetime.datetime(2019, 9, 13, 15, 44, 49, 752691, tzinfo=utc))),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'User',
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Errors',
            fields=[
                ('_id', models.UUIDField(blank=True, primary_key=True, serialize=False)),
                ('error_name', models.CharField(max_length=50)),
                ('error_description', models.TextField(max_length=500)),
                ('point_of_origin', models.CharField(max_length=100)),
                ('logged_at', models.DateTimeField(blank=True)),
                ('updated_at', models.DateTimeField(blank=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('warning_level', models.IntegerField(blank=True, default=-1, null=True)),
                ('issued_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'All Error logs',
                'ordering': ['logged_at'],
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('_id', models.UUIDField(blank=True, primary_key=True, serialize=False)),
                ('org_id', models.UUIDField(blank=True, unique=True)),
                ('org_name', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(blank=True)),
                ('updated_at', models.DateTimeField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Organisation',
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('_id', models.UUIDField(blank=True, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField(blank=True, unique=True)),
                ('project_name', models.CharField(max_length=30)),
                ('project_description', models.TextField(blank=True, default=None, max_length=500, null=True)),
                ('registered_at', models.DateTimeField(blank=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bugtracker.Organisation')),
                ('registered_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'All Project name',
            },
        ),
        migrations.CreateModel(
            name='UserToOrg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_added', models.DateTimeField(blank=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bugtracker.Organisation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User & Org connecting Table',
            },
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('_id', models.UUIDField(blank=True, primary_key=True, serialize=False)),
                ('token', models.UUIDField(blank=True, unique=True)),
                ('refresh_token', models.UUIDField(blank=True, unique=True)),
                ('generated_at', models.DateTimeField(blank=True)),
                ('updated_at', models.DateTimeField(blank=True)),
                ('created_at', models.DateTimeField(blank=True, verbose_name='First entry time')),
                ('time_to_live', models.IntegerField(default=864000)),
                ('authorized_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Access Token management',
            },
        ),
        migrations.CreateModel(
            name='ProjectUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(blank=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bugtracker.Projects')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Project & User connecting Table',
            },
        ),
        migrations.CreateModel(
            name='ProjectToken',
            fields=[
                ('_id', models.UUIDField(blank=True, primary_key=True, serialize=False)),
                ('token', models.UUIDField(blank=True, unique=True)),
                ('refresh_token', models.UUIDField(blank=True, unique=True)),
                ('generated_at', models.DateTimeField(blank=True)),
                ('updated_at', models.DateTimeField(blank=True)),
                ('time_to_live', models.IntegerField(default=864000)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bugtracker.Projects')),
            ],
            options={
                'verbose_name_plural': 'Project Access Token',
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('_id', models.UUIDField(blank=True, primary_key=True, serialize=False)),
                ('log_title', models.CharField(blank=True, default=None, max_length=30, null=True)),
                ('logs', models.TextField(max_length=1000)),
                ('logged_at', models.DateTimeField(blank=True)),
                ('updated_at', models.DateTimeField(blank=True)),
                ('reference_project', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='bugtracker.Projects')),
            ],
            options={
                'verbose_name_plural': 'All debug logs',
            },
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_email', models.EmailField(max_length=254, unique=True)),
                ('invited_at', models.DateTimeField(blank=True)),
                ('is_used', models.BooleanField(blank=True)),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Invitation',
            },
        ),
        migrations.CreateModel(
            name='ErrorStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resolved_at', models.DateTimeField(blank=True)),
                ('updated_at', models.DateTimeField(blank=True)),
                ('error', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bugtracker.Errors')),
                ('resolved_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Error User connecting Table',
            },
        ),
        migrations.AddField(
            model_name='errors',
            name='reference_project',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='bugtracker.Projects'),
        ),
    ]
